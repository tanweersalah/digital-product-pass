#################################################################################
# Tractus-X - Digital Product Passport Application
#
# Copyright (c) 2022, 2024 BMW AG, Henkel AG & Co. KGaA
# Copyright (c) 2023, 2024 CGI Deutschland B.V. & Co. KG
# Copyright (c) 2022, 2024 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the
# License for the specific language govern in permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
#################################################################################

### The fully configuration is available in https://github.com/eclipse-tractusx/tractusx-edc/tree/main/charts/tractusx-connector




---
# Default values for eclipse-dataspace-connector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

tractusx-connector:
  enabled: true
  participant:
    id: "<path:material-pass/data/int/edc/participant#bpnNumber>"

  controlplane:
    enabled: true
    endpoints:
      # -- default api for health checks, should not be added to any ingress
      default:
        # -- port for incoming api calls
        port: 8080
        # -- path for incoming api calls
        path: /consumer/api
      # -- data management api, used by internal users, can be added to an ingress and must not be internet facing
      management:
        # -- port for incoming api calls
        port: 8081
        # -- path for incoming api calls
        path: /consumer/management
        # -- authentication key, must be attached to each 'X-Api-Key' request header
        authKey: <path:material-pass/data/int/edc/oauth#api.key>
      # -- control api, used for internal control calls. can be added to the internal ingress, but should probably not
      control:
        # -- port for incoming api calls
        port: 8083
        # -- path for incoming api calls
        path: /consumer/control
      # -- ids api, used for inter connector communication and must be internet facing
      protocol:
        # -- port for incoming api calls
        port: 8084
        # -- path for incoming api calls
        path: /consumer/api/v1/dsp
      # -- metrics api, used for application metrics, must not be internet facing
      metrics:
        # -- port for incoming api calls
        port: 9090
        # -- path for incoming api calls
        path: /consumer/metrics
      # -- observability api with unsecured access, must not be internet facing
      observability:
        # -- port for incoming API calls
        port: 8099
        # -- observability api, provides /health /readiness and /liveness endpoints
        path: /consumer/observability
        # -- allow or disallow insecure access, i.e. access without authentication
        insecure: true

    ssi:
      miw:
        url: "<path:material-pass/data/int/edc/ssi#miwUrl>"
        authorityId: "<path:material-pass/data/int/edc/ssi#authorityId>"
      oauth:
        tokenurl: "https://centralidp.int.demo.catena-x.net/auth/realms/CX-Central/protocol/openid-connect/token"
        client:
          id: "<path:material-pass/data/int/edc/ssi#clientId>"
          secretAlias: "int-client-secret"
      endpoint:
        audience: https://materialpass.int.demo.catena-x.net/consumer

    ## Ingress declaration to expose the network service.
    ingresses:
      ## Public / Internet facing Ingress
      - enabled: true
        # -- The hostname to be used to precisely map incoming traffic onto the underlying network service
        hostname: "materialpass.int.demo.catena-x.net"
       # -- Additional ingress annotations to add
        annotations: {}
        # -- EDC endpoints exposed by this ingress resource
        endpoints:
          - default
          - management
          - control
          - protocol
          - metrics
          - observability
        # -- Defines the [ingress class](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class)  to use
        className: "nginx"
        # -- TLS [tls class](https://kubernetes.io/docs/concepts/services-networking/ingress/#tls) applied to the ingress resource
        tls:
          # -- Enables TLS on the ingress resource
          enabled: true
          # -- If present overwrites the default secret name
          secretName: "tls-secret"
  dataplane:
    enabled: true
    endpoints:
      default:
        port: 8080
        path: /consumer/api
      public:
        port: 8081
        path: /consumer/api/public
      control:
        port: 8083
        path: /consumer/api/dataplane/control
      proxy:
        port: 8186
        path: /consumer/proxy
      observability:
        # -- port for incoming API calls
        port: 8085
        # -- observability api, provides /health /readiness and /liveness endpoints
        path: /consumer/observability
        # -- allow or disallow insecure access, i.e. access without authentication
        insecure: true
      metrics:
        port: 9090
        path: /consumer/metrics
  
    ## Ingress declaration to expose the network service.
    ingresses:
      ## Public / Internet facing Ingress
      - enabled: true
        # -- The hostname to be used to precisely map incoming traffic onto the underlying network service
        hostname: "materialpass.int.demo.catena-x.net"
        # -- Additional ingress annotations to add
        annotations: {}
        # -- EDC endpoints exposed by this ingress resource
        endpoints:
          - public
        # -- Defines the [ingress class](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class)  to use
        className: "nginx"
        # -- TLS [tls class](https://kubernetes.io/docs/concepts/services-networking/ingress/#tls) applied to the ingress resource
        tls:
          # -- Enables TLS on the ingress resource
          enabled: true
          # -- If present overwrites the default secret name
          secretName: "tls-secret"
        ## Adds [cert-manager](https://cert-manager.io/docs/) annotations to the ingress resource
        certManager:
          # -- If preset enables certificate generation via cert-manager namespace scoped issuer
          issuer: ""
          # -- If preset enables certificate generation via cert-manager cluster-wide issuer
          clusterIssuer: ""

  postgresql:
    username: <path:material-pass/data/int/edc/database#user>
    password: <path:material-pass/data/int/edc/database#password>

  vault:
    hashicorp:
      url: <path:material-pass/data/int/edc/vault#vault.hashicorp.url>
      token: <path:material-pass/data/int/edc/vault#vault.hashicorp.token>
      paths:
        secret:  <path:material-pass/data/int/edc/vault#vault.hashicorp.api.secret.path>
        health: /v1/sys/health
    secretNames:
      transferProxyTokenSignerPrivateKey: ids-daps_key
      transferProxyTokenSignerPublicKey: ids-daps_crt
      transferProxyTokenEncryptionAesKey: edc-encryption-key

  backendService:
     httpProxyTokenReceiverUrl: "https://dpp.int.demo.catena-x.net/endpoint"

postgresql:
  auth:
    username: <path:material-pass/data/int/edc/database#user>
    password: <path:material-pass/data/int/edc/database#password>

irs-helm:
  enabled: true
  bpn: <path:material-pass/data/int/edc/participant#bpnNumber>

  irsUrl: "https://materialpass-irs.int.demo.catena-x.net"
  apiKeyAdmin: <path:material-pass/data/int/irs/apiKey#apiKeyAdmin>
  apiKeyRegular: <path:material-pass/data/int/irs/apiKey#apiKeyRegular>

  ingress:
    enabled: true
    annotations:
      ingressClassName: nginx
      nginx.ingress.kubernetes.io/backend-protocol: HTTP
      nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
      nginx.ingress.kubernetes.io/ssl-passthrough: 'false'
    hosts:
      - host: "materialpass-irs.int.demo.catena-x.net"
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - "materialpass-irs.int.demo.catena-x.net"
        secretName: tls-secret

  digitalTwinRegistry:
    type: decentral
    url: https://materialpass.int.demo.catena-x.net/semantics/registry/api/v3.0

    discovery:
      oAuthClientId: discovery  # ID of the OAuth2 client registration to use, see config spring.security.oauth2.client
      discoveryFinderUrl: https://semantics.int.demo.catena-x.net/discoveryfinder/api/v1.0/administration/connectors/discovery/search
    semanticshub:
      url: https://semantics.int.demo.catena-x.net/hub/api/v1/models
      oAuthClientId: semantics
    bpdm:
      url: https://partners-pool.int.demo.catena-x.net
      oAuthClientId: bpdm
    bpnEndpoint: >-
      {{- if .Values.bpdm.url }}
      {{- tpl (.Values.bpdm.url | default "") . }}/api/catena/legal-entities/{partnerId}?idType={idType}
      {{- end }}

  minioUser: <path:material-pass/data/int/irs/minio#user>
  minioPassword: <path:material-pass/data/int/irs/minio#password>
  minioUrl: "http://{{ .Release.Name }}-minio:9000"

  oauth2:
    clientTokenUri: https://centralidp.int.demo.catena-x.net/auth/realms/CX-Central/protocol/openid-connect/token
    jwkSetUri: https://centralidp.int.demo.catena-x.net/auth/realms/CX-Central/protocol/openid-connect/certs
    discovery:
      clientId: <path:material-pass/data/int/irs/oauth2#clientId>
      clientSecret: <path:material-pass/data/int/irs/oauth2#clientSecret>
    semantics:
      clientId: <path:material-pass/data/int/irs/oauth2#clientId>
      clientSecret: <path:material-pass/data/int/irs/oauth2#clientSecret>
    bpdm:
      clientId: <path:material-pass/data/int/irs/oauth2#clientId>
      clientSecret: <path:material-pass/data/int/irs/oauth2#clientSecret>

  edc:
    catalog:
      acceptedPolicies:
        - leftOperand: "FrameworkAgreement.sustainability"	
          operator: "eq"	
          rightOperand: "active"
        - leftOperand: "Membership"
          operator: "eq"
          rightOperand: "active"
    controlplane:
      endpoint:
        data: https://materialpass.int.demo.catena-x.net/consumer/management
      apikey:
        header: "X-Api-Key"
        secret: <path:material-pass/data/int/edc/oauth#api.key>

  minio:
    serviceAccount:
      create: false
    rootUser: <path:material-pass/data/int/irs/minio#user>
    rootPassword: <path:material-pass/data/int/irs/minio#password>
